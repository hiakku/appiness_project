{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akku\\\\Documents\\\\MyProjects\\\\react-js\\\\company-assignment\\\\src\\\\component\\\\LoginForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../redux/reducer';\nimport DashBoard from './DashBoard';\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    let _this$state = this.state,\n        email = _this$state.email,\n        password = _this$state.password;\n    let _this$props = this.props,\n        isLoginSuccess = _this$props.isLoginSuccess,\n        loginError = _this$props.loginError;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      ref: \"form\",\n      name: \"loginForm\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Email:\"), React.createElement(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      onChange: e => this.setState({\n        email: e.target.value\n      }),\n      value: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Password:\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      value: password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Login\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, isLoginSuccess && React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(DashBoard, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), loginError && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, loginError.message)));\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let _this$state2 = this.state,\n        email = _this$state2.email,\n        password = _this$state2.password;\n    this.props.login(email, password);\n    this.setState({\n      email: '',\n      password: ''\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoginSuccess: state.isLoginSuccess,\n    loginError: state.loginError\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, password) => dispatch(login(email, password))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["C:/Users/akku/Documents/MyProjects/react-js/company-assignment/src/component/LoginForm.js"],"names":["React","Component","connect","login","DashBoard","LoginForm","constructor","props","state","handleSubmit","bind","render","email","password","isLoginSuccess","loginError","e","setState","target","value","message","preventDefault","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAEhCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,sBACiB,KAAKH,KADtB;AAAA,QACFI,KADE,eACFA,KADE;AAAA,QACKC,QADL,eACKA,QADL;AAAA,sBAE6B,KAAKN,KAFlC;AAAA,QAEDO,cAFC,eAEDA,cAFC;AAAA,QAEeC,UAFf,eAEeA,UAFf;AAGP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,GAAG,EAAC,MAAV;AAAiB,MAAA,IAAI,EAAC,WAAtB;AAAkC,MAAA,QAAQ,EAAE,KAAKN,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,OAAzB;AAAiC,MAAA,QAAQ,EAAEO,CAAC,IAAI,KAAKC,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEI,CAAC,CAACE,MAAF,CAASC;AAAjB,OAAd,CAAhD;AAAwF,MAAA,KAAK,EAAEP,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,QAAQ,EAAEI,CAAC,IAAI,KAAKC,QAAL,CAAc;AAACJ,QAAAA,QAAQ,EAAEG,CAAC,CAACE,MAAF,CAASC;AAApB,OAAd,CAAtD;AAAiG,MAAA,KAAK,EAAEN,QAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,CADF,EAaE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAbF,CADF,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIC,cAAc,IAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR,CADtB,EAEIC,UAAU,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMA,UAAU,CAACK,OAAjB,CAFlB,CAhBJ,CADF;AAuBD;;AAEDX,EAAAA,YAAY,CAACO,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACK,cAAF;AADc,uBAEY,KAAKb,KAFjB;AAAA,QAERI,KAFQ,gBAERA,KAFQ;AAAA,QAEDC,QAFC,gBAEDA,QAFC;AAGd,SAAKN,KAAL,CAAWJ,KAAX,CAAiBS,KAAjB,EAAwBC,QAAxB;AACA,SAAKI,QAAL,CAAc;AACZL,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,QAAQ,EAAE;AAFE,KAAd;AAID;;AA5C+B;;AA+ClC,MAAMS,eAAe,GAAId,KAAD,IAAW;AACjC,SAAO;AACLM,IAAAA,cAAc,EAAEN,KAAK,CAACM,cADjB;AAELC,IAAAA,UAAU,EAAEP,KAAK,CAACO;AAFb,GAAP;AAID,CALD;;AAOA,MAAMQ,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLrB,IAAAA,KAAK,EAAE,CAACS,KAAD,EAAQC,QAAR,KAAqBW,QAAQ,CAACrB,KAAK,CAACS,KAAD,EAAQC,QAAR,CAAN;AAD/B,GAAP;AAGD,CAJD;;AAMA,eAAeX,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ClB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../redux/reducer';\r\nimport DashBoard from './DashBoard';\r\n\r\nclass LoginForm extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  render() {\r\n    let {email, password} = this.state;\r\n    let { isLoginSuccess, loginError} = this.props;\r\n    return (\r\n      <div>\r\n        <form ref=\"form\" name=\"loginForm\" onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <div>\r\n              <label>Email:</label>\r\n              <input type=\"email\" name=\"email\" onChange={e => this.setState({email: e.target.value})} value={email}/>\r\n            </div>\r\n\r\n            <div>\r\n              <label>Password:</label>\r\n              <input type=\"password\" name=\"password\" onChange={e => this.setState({password: e.target.value})} value={password}/>\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n          <div>\r\n            { isLoginSuccess && <Router><DashBoard/></Router> }\r\n            { loginError && <div>{loginError.message}</div> }\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    let { email, password } = this.state;\r\n    this.props.login(email, password);\r\n    this.setState({\r\n      email: '',\r\n      password: ''\r\n    });\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoginSuccess: state.isLoginSuccess,\r\n    loginError: state.loginError\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (email, password) => dispatch(login(email, password))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);"]},"metadata":{},"sourceType":"module"}