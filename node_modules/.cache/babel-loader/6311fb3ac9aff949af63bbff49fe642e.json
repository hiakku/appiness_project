{"ast":null,"code":"const LOGIN_SUCCESSFULLY = 'LOGIN_SUCCESSFULLY';\nconst LOGIN_ERROR = 'LOGIN_ERROR';\nexport function login(email, password) {\n  return dispatch => {\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    callLoginApi(email, password, error => {\n      if (!error) {\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: LOGIN_SUCCESSFULLY,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction callLoginApi(email, password, callback) {\n  if (email === 'hruday@gmail.com' && password === 'hruday123') {\n    return callback(null);\n  } else {\n    return callback(new Error('Invalid email and password'));\n  }\n}\n\nexport default function reducer(state = {\n  isLoginPending: false,\n  loginError: null\n}, action) {\n  switch (action.type) {\n    case LOGIN_SUCCESSFULLY:\n      return Object.assign({}, state, {\n        isLoginSuccess: action.isLoginSuccess\n      });\n\n    case LOGIN_ERROR:\n      return Object.assign({}, state, {\n        loginError: action.loginError\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/akku/Documents/MyProjects/react-js/company-assignment/src/redux/reducer.js"],"names":["LOGIN_SUCCESSFULLY","LOGIN_ERROR","login","email","password","dispatch","setLoginSuccess","setLoginError","callLoginApi","error","isLoginSuccess","type","loginError","callback","Error","reducer","state","isLoginPending","action","Object","assign"],"mappings":"AAAA,MAAMA,kBAAkB,GAAG,oBAA3B;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AACrC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACE,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAC,IAAAA,YAAY,CAACL,KAAD,EAAQC,QAAR,EAAkBK,KAAK,IAAI;AACrC,UAAI,CAACA,KAAL,EAAY;AACVJ,QAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,OAFD,MAEO;AACLD,QAAAA,QAAQ,CAACE,aAAa,CAACE,KAAD,CAAd,CAAR;AACD;AACF,KANW,CAAZ;AAOD,GAXD;AAYD;;AAED,SAASH,eAAT,CAAyBI,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEX,kBADD;AAELU,IAAAA;AAFK,GAAP;AAID;;AAED,SAASH,aAAT,CAAuBK,UAAvB,EAAmC;AACjC,SAAO;AACLD,IAAAA,IAAI,EAAEV,WADD;AAELW,IAAAA;AAFK,GAAP;AAID;;AAED,SAASJ,YAAT,CAAsBL,KAAtB,EAA6BC,QAA7B,EAAuCS,QAAvC,EAAiD;AAC7C,MAAIV,KAAK,KAAK,kBAAV,IAAgCC,QAAQ,KAAK,WAAjD,EAA8D;AAC5D,WAAOS,QAAQ,CAAC,IAAD,CAAf;AACD,GAFD,MAEO;AACL,WAAOA,QAAQ,CAAC,IAAIC,KAAJ,CAAU,4BAAV,CAAD,CAAf;AACD;AACJ;;AAED,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAG;AACtCC,EAAAA,cAAc,EAAE,KADsB;AAEtCL,EAAAA,UAAU,EAAE;AAF0B,CAAzB,EAGZM,MAHY,EAGJ;AACT,UAAQA,MAAM,CAACP,IAAf;AACD,SAAKX,kBAAL;AACK,aAAOmB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BN,QAAAA,cAAc,EAAEQ,MAAM,CAACR;AADO,OAAzB,CAAP;;AAIF,SAAKT,WAAL;AACE,aAAOkB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,KAAlB,EAAyB;AAC9BJ,QAAAA,UAAU,EAAEM,MAAM,CAACN;AADW,OAAzB,CAAP;;AAIF;AACE,aAAOI,KAAP;AAZJ;AAcD","sourcesContent":["const LOGIN_SUCCESSFULLY = 'LOGIN_SUCCESSFULLY';\r\nconst LOGIN_ERROR = 'LOGIN_ERROR';\r\n\r\nexport function login(email, password) {\r\n  return dispatch => {\r\n    dispatch(setLoginSuccess(false));\r\n    dispatch(setLoginError(null));\r\n\r\n    callLoginApi(email, password, error => {\r\n      if (!error) {\r\n        dispatch(setLoginSuccess(true));\r\n      } else {\r\n        dispatch(setLoginError(error));\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction setLoginSuccess(isLoginSuccess) {\r\n  return {\r\n    type: LOGIN_SUCCESSFULLY,\r\n    isLoginSuccess\r\n  };\r\n}\r\n\r\nfunction setLoginError(loginError) {\r\n  return {\r\n    type: LOGIN_ERROR,\r\n    loginError\r\n  }\r\n}\r\n\r\nfunction callLoginApi(email, password, callback) {\r\n    if (email === 'hruday@gmail.com' && password === 'hruday123') {\r\n      return callback(null);\r\n    } else {\r\n      return callback(new Error('Invalid email and password'));\r\n    }\r\n}\r\n\r\nexport default function reducer(state = {\r\n  isLoginPending: false,\r\n  loginError: null\r\n}, action) {\r\n  switch (action.type) {\r\n case LOGIN_SUCCESSFULLY:\r\n      return Object.assign({}, state, {\r\n        isLoginSuccess: action.isLoginSuccess\r\n      });\r\n\r\n    case LOGIN_ERROR:\r\n      return Object.assign({}, state, {\r\n        loginError: action.loginError\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}