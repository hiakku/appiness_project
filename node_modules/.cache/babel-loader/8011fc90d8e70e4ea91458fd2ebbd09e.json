{"ast":null,"code":"const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\nexport function login(email, password) {\n  return dispatch => {\n    dispatch(setLoginPending(true));\n    dispatch(setLoginSuccess(false));\n    dispatch(setLoginError(null));\n    callLoginApi(email, password, error => {\n      dispatch(setLoginPending(false));\n\n      if (!error) {\n        dispatch(setLoginSuccess(true));\n      } else {\n        dispatch(setLoginError(error));\n      }\n    });\n  };\n}\n\nfunction setLoginPending(isLoginPending) {\n  return {\n    type: SET_LOGIN_PENDING,\n    isLoginPending\n  };\n}\n\nfunction setLoginSuccess(isLoginSuccess) {\n  return {\n    type: SET_LOGIN_SUCCESS,\n    isLoginSuccess\n  };\n}\n\nfunction setLoginError(loginError) {\n  return {\n    type: SET_LOGIN_ERROR,\n    loginError\n  };\n}\n\nfunction callLoginApi(email, password, callback) {\n  setTimeout(() => {\n    if (email === 'hruday@gmail.com' && password === 'hruday123') {\n      return callback(null);\n    } else {\n      return callback(new Error('Invalid email and password'));\n    }\n  }, 1000);\n}\n\nexport default function reducer(state = {\n  isLoginSuccess: false,\n  isLoginPending: false,\n  loginError: null\n}, action) {\n  switch (action.type) {\n    case SET_LOGIN_PENDING:\n      return Object.assign({}, state, {\n        isLoginPending: action.isLoginPending\n      });\n\n    case SET_LOGIN_SUCCESS:\n      return Object.assign({}, state, {\n        isLoginSuccess: action.isLoginSuccess\n      });\n\n    case SET_LOGIN_ERROR:\n      return Object.assign({}, state, {\n        loginError: action.loginError\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/akku/Documents/MyProjects/react-js/company-assignment/src/redux/reducer.js"],"names":["SET_LOGIN_PENDING","SET_LOGIN_SUCCESS","SET_LOGIN_ERROR","login","email","password","dispatch","setLoginPending","setLoginSuccess","setLoginError","callLoginApi","error","isLoginPending","type","isLoginSuccess","loginError","callback","setTimeout","Error","reducer","state","action","Object","assign"],"mappings":"AAAA,MAAMA,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,eAAe,GAAG,iBAAxB;AAEA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgC;AACrC,SAAOC,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAACC,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACE,eAAe,CAAC,KAAD,CAAhB,CAAR;AACAF,IAAAA,QAAQ,CAACG,aAAa,CAAC,IAAD,CAAd,CAAR;AAEAC,IAAAA,YAAY,CAACN,KAAD,EAAQC,QAAR,EAAkBM,KAAK,IAAI;AACrCL,MAAAA,QAAQ,CAACC,eAAe,CAAC,KAAD,CAAhB,CAAR;;AACA,UAAI,CAACI,KAAL,EAAY;AACVL,QAAAA,QAAQ,CAACE,eAAe,CAAC,IAAD,CAAhB,CAAR;AACD,OAFD,MAEO;AACLF,QAAAA,QAAQ,CAACG,aAAa,CAACE,KAAD,CAAd,CAAR;AACD;AACF,KAPW,CAAZ;AAQD,GAbD;AAcD;;AAED,SAASJ,eAAT,CAAyBK,cAAzB,EAAyC;AACvC,SAAO;AACLC,IAAAA,IAAI,EAAEb,iBADD;AAELY,IAAAA;AAFK,GAAP;AAID;;AAED,SAASJ,eAAT,CAAyBM,cAAzB,EAAyC;AACvC,SAAO;AACLD,IAAAA,IAAI,EAAEZ,iBADD;AAELa,IAAAA;AAFK,GAAP;AAID;;AAED,SAASL,aAAT,CAAuBM,UAAvB,EAAmC;AACjC,SAAO;AACLF,IAAAA,IAAI,EAAEX,eADD;AAELa,IAAAA;AAFK,GAAP;AAID;;AAED,SAASL,YAAT,CAAsBN,KAAtB,EAA6BC,QAA7B,EAAuCW,QAAvC,EAAiD;AAC/CC,EAAAA,UAAU,CAAC,MAAM;AACf,QAAIb,KAAK,KAAK,kBAAV,IAAgCC,QAAQ,KAAK,WAAjD,EAA8D;AAC5D,aAAOW,QAAQ,CAAC,IAAD,CAAf;AACD,KAFD,MAEO;AACL,aAAOA,QAAQ,CAAC,IAAIE,KAAJ,CAAU,4BAAV,CAAD,CAAf;AACD;AACF,GANS,EAMP,IANO,CAAV;AAOD;;AAED,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAG;AACtCN,EAAAA,cAAc,EAAE,KADsB;AAEtCF,EAAAA,cAAc,EAAE,KAFsB;AAGtCG,EAAAA,UAAU,EAAE;AAH0B,CAAzB,EAIZM,MAJY,EAIJ;AACT,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKb,iBAAL;AACE,aAAOsB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC9BR,QAAAA,cAAc,EAAES,MAAM,CAACT;AADO,OAAzB,CAAP;;AAIF,SAAKX,iBAAL;AACE,aAAOqB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC9BN,QAAAA,cAAc,EAAEO,MAAM,CAACP;AADO,OAAzB,CAAP;;AAIF,SAAKZ,eAAL;AACE,aAAOoB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,KAAlB,EAAyB;AAC9BL,QAAAA,UAAU,EAAEM,MAAM,CAACN;AADW,OAAzB,CAAP;;AAIF;AACE,aAAOK,KAAP;AAjBJ;AAmBD","sourcesContent":["const SET_LOGIN_PENDING = 'SET_LOGIN_PENDING';\r\nconst SET_LOGIN_SUCCESS = 'SET_LOGIN_SUCCESS';\r\nconst SET_LOGIN_ERROR = 'SET_LOGIN_ERROR';\r\n\r\nexport function login(email, password) {\r\n  return dispatch => {\r\n    dispatch(setLoginPending(true));\r\n    dispatch(setLoginSuccess(false));\r\n    dispatch(setLoginError(null));\r\n\r\n    callLoginApi(email, password, error => {\r\n      dispatch(setLoginPending(false));\r\n      if (!error) {\r\n        dispatch(setLoginSuccess(true));\r\n      } else {\r\n        dispatch(setLoginError(error));\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction setLoginPending(isLoginPending) {\r\n  return {\r\n    type: SET_LOGIN_PENDING,\r\n    isLoginPending\r\n  };\r\n}\r\n\r\nfunction setLoginSuccess(isLoginSuccess) {\r\n  return {\r\n    type: SET_LOGIN_SUCCESS,\r\n    isLoginSuccess\r\n  };\r\n}\r\n\r\nfunction setLoginError(loginError) {\r\n  return {\r\n    type: SET_LOGIN_ERROR,\r\n    loginError\r\n  }\r\n}\r\n\r\nfunction callLoginApi(email, password, callback) {\r\n  setTimeout(() => {\r\n    if (email === 'hruday@gmail.com' && password === 'hruday123') {\r\n      return callback(null);\r\n    } else {\r\n      return callback(new Error('Invalid email and password'));\r\n    }\r\n  }, 1000);\r\n}\r\n\r\nexport default function reducer(state = {\r\n  isLoginSuccess: false,\r\n  isLoginPending: false,\r\n  loginError: null\r\n}, action) {\r\n  switch (action.type) {\r\n    case SET_LOGIN_PENDING:\r\n      return Object.assign({}, state, {\r\n        isLoginPending: action.isLoginPending\r\n      });\r\n\r\n    case SET_LOGIN_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        isLoginSuccess: action.isLoginSuccess\r\n      });\r\n\r\n    case SET_LOGIN_ERROR:\r\n      return Object.assign({}, state, {\r\n        loginError: action.loginError\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}